/// SPDX-License-Identifier: GPL-2.0+
/*
 * Copyright (C) 2016~2024 Synaptics Incorporated. All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 or
 * later as published by the Free Software Foundation.
 *
 * INFORMATION CONTAINED IN THIS DOCUMENT IS PROVIDED "AS-IS," AND
 * SYNAPTICS EXPRESSLY DISCLAIMS ALL EXPRESS AND IMPLIED WARRANTIES,
 * INCLUDING ANY IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE, AND ANY WARRANTIES OF NON-INFRINGEMENT OF ANY
 * INTELLECTUAL PROPERTY RIGHTS. IN NO EVENT SHALL SYNAPTICS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, PUNITIVE, OR
 * CONSEQUENTIAL DAMAGES ARISING OUT OF OR IN CONNECTION WITH THE USE
 * OF THE INFORMATION CONTAINED IN THIS DOCUMENT, HOWEVER CAUSED AND
 * BASED ON ANY THEORY OF LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * NEGLIGENCE OR OTHER TORTIOUS ACTION, AND EVEN IF SYNAPTICS WAS
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. IF A TRIBUNAL OF
 * COMPETENT JURISDICTION DOES NOT PERMIT THE DISCLAIMER OF DIRECT
 * DAMAGES OR ANY OTHER DAMAGES, SYNAPTICS' TOTAL CUMULATIVE LIABILITY
 * TO ANY PARTY SHALL NOT EXCEED ONE HUNDRED U.S. DOLLARS.
 */

#ifndef __AVIO_DHUB_CFG_PRV_H__
#define __AVIO_DHUB_CFG_PRV_H__
#define AG_NUM_OF_CHANNELS            (avioDhubChMap_aio64b_DRT_W + 1)

#define VPP_NUM_OF_CHANNELS           (avioDhubChMap_vpp128b_LCDC2_R + 1)
#define VPP_DHUB_BANK0_START_ADDR     avioDhubTcmMap_vpp128bDhub_BANK0_START_ADDR

/*Total size = 0x5000 = 20480*/
#define AIO_DHUB_I2S1_R_SIZE		(2048)
#define AIO_DHUB_I2S1_W_SIZE		(1024)
#define AIO_DHUB_I2S2_R_SIZE		(2048)
#define AIO_DHUB_I2S2_W_SIZE		(1024)
#define AIO_DHUB_I2S3_R_SIZE		(2048)
#define AIO_DHUB_I2S3_W_SIZE		(1024)
#define AIO_DHUB_I2S4_R_SIZE		(2048)
#define AIO_DHUB_I2S4_W_SIZE		(1024)
#define AIO_DHUB_BCM_R_SIZE		(512)
#define AIO_DHUB_I2S5_R_SIZE		(2048)
#define AIO_DHUB_I2S5_W_SIZE		(1024)
#define AIO_DHUB_PDM_W_SIZE		(1024)
#define AIO_DHUB_PDM_R_SIZE		(1024)
#define AIO_DHUB_DCLASS_R_SIZE		(512)
#define AIO_DHUB_DRT_R_SIZE		(1024)
#define AIO_DHUB_DRT_W_SIZE		(1024)
#define AIO_DHUB_I2S1_R_BASE		(AG_DHUB_BANK0_START_ADDR)
#define AIO_DHUB_I2S1_W_BASE		(AIO_DHUB_I2S1_R_BASE+AIO_DHUB_I2S1_R_SIZE)
#define AIO_DHUB_I2S2_R_BASE		(AIO_DHUB_I2S1_W_BASE+AIO_DHUB_I2S1_W_SIZE)
#define AIO_DHUB_I2S2_W_BASE		(AIO_DHUB_I2S2_R_BASE+AIO_DHUB_I2S2_R_SIZE)
#define AIO_DHUB_I2S3_R_BASE		(AIO_DHUB_I2S2_W_BASE+AIO_DHUB_I2S2_W_SIZE)
#define AIO_DHUB_I2S3_W_BASE		(AIO_DHUB_I2S3_R_BASE+AIO_DHUB_I2S3_R_SIZE)
#define AIO_DHUB_I2S4_R_BASE		(AIO_DHUB_I2S3_W_BASE+AIO_DHUB_I2S3_W_SIZE)
#define AIO_DHUB_I2S4_W_BASE		(AIO_DHUB_I2S4_R_BASE+AIO_DHUB_I2S4_R_SIZE)
#define AIO_DHUB_BCM_R_BASE			(AIO_DHUB_I2S4_W_BASE+AIO_DHUB_I2S4_W_SIZE)
#define AIO_DHUB_I2S5_R_BASE		(AIO_DHUB_BCM_R_BASE+AIO_DHUB_BCM_R_SIZE)
#define AIO_DHUB_I2S5_W_BASE		(AIO_DHUB_I2S5_R_BASE+AIO_DHUB_I2S5_R_SIZE)
#define AIO_DHUB_PDM_W_BASE		(AIO_DHUB_I2S5_W_BASE+AIO_DHUB_I2S5_W_SIZE)
#define AIO_DHUB_PDM_R_BASE		(AIO_DHUB_PDM_W_BASE+AIO_DHUB_PDM_W_SIZE)
#define AIO_DHUB_DCLASS_R_BASE		(AIO_DHUB_PDM_R_BASE+AIO_DHUB_PDM_R_SIZE)
#define AIO_DHUB_DRT_R_BASE		(AIO_DHUB_DCLASS_R_BASE+AIO_DHUB_DCLASS_R_SIZE)
#define AIO_DHUB_DRT_W_BASE		(AIO_DHUB_DRT_R_BASE+AIO_DHUB_DRT_R_SIZE)
#define AG_DHUB_BANK0_START_ADDR	avioDhubTcmMap_aio64bDhub_BANK0_START_ADDR
#define AVIO_DHUB_INITCHANNELAXQOS(pdhubHandle, dhub_config, chanId, i, cfgQ)
#define AVIO_DHUB_MTR_CFG_QOS_EN	0
#define AVIO_DHUB_MTR_CFG_QOS		0
#define AVIO_DHUB_DESC_OVRDQOS		1
#define AVIO_DHUB_DESC_QOSSEL		1
#define IS_SINGLE_DISPLAY()		0


#define VPP_DHUB_BASE			(MEMMAP_AVIO_REG_BASE + AVIO_MEMMAP_VPP128B_DHUB_REG_BASE + RA_vpp128bDhub_dHub0)
#define VPP_HBO_SRAM_BASE		(MEMMAP_AVIO_REG_BASE + AVIO_MEMMAP_VPP128B_DHUB_REG_BASE + RA_vpp128bDhub_tcm0)

#define LCDC1_REG_BASE			(MEMMAP_AVIO_REG_BASE + AVIO_MEMMAP_AVIO_LCDC1_REG_BASE)
#define LCDC2_REG_BASE			(MEMMAP_AVIO_REG_BASE + AVIO_MEMMAP_AVIO_LCDC2_REG_BASE)

#define AG_DHUB_BASE			(MEMMAP_AVIO_REG_BASE + AVIO_MEMMAP_AIO64B_DHUB_REG_BASE + RA_aio64bDhub_dHub0)
#define AG_HBO_SRAM_BASE		(MEMMAP_AVIO_REG_BASE + AVIO_MEMMAP_AIO64B_DHUB_REG_BASE + RA_aio64bDhub_tcm0)

typedef struct DHUB_channel_config {
	int chanId;
	unsigned int chanCmdBase;
	unsigned int chanDataBase;
	int chanCmdSize;
	int chanDataSize;
	int chanMtuSize;
	int chanQos;
	int chanSelfLoop;
	int chanEnable;
	unsigned int chanAxQosLO;
	unsigned int chanAxQosHI;
} DHUB_channel_config;

int drv_dhub_initialize_dhub(void *h_dhub_ctx);

#endif /*__AVIO_DHUB_CFG_PRV_H__*/
